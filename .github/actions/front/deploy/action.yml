name: Build and Deploy Front
description: Build and deploy expo app with over-the-air updates.
inputs:
  working-directory:
    description: working directory that all commands are run from
    required: true
runs:
  using: "composite"
  steps:
    # Use HTTPS instead of SSH to install dependencies from GitHub repos
    # See: https://github.com/actions/setup-node/issues/214#issuecomment-810829250
    # this could be removed once git-rev-sync is pointed back at the upstream repo
    - name: Reconfigure git to use HTTP authentication
      shell: bash
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # this could be removed once setup-node adds support for .nvmrc files
    # ref: https://github.com/actions/setup-node/issues/32
    - name: Get node version
      id: nvm
      run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

    - name: Install npm dependencies
      run: |
        npm ci
        cd ../common && npm ci
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Publish
      run: |
        echo $GOOGLE_SERVICES_ANDROID | base64 -d > ./google-services.json
        echo $GOOGLE_SERVICES_IOS | base64 -d > ./GoogleService-Info.plist
        export GOOGLE_SERVICES_ANDROID=google-services.json
        export GOOGLE_SERVICES_IOS=GoogleService-Info.plist
        npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
        npx expo publish --release-channel $(./getReleaseChannel.sh)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
