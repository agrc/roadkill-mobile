name: Back - Test, Build, and Deploy to GCP

on:
  push:
    branches:
      - staging
      - production
    paths:
      - 'src/back/**'
      - '.github/workflows/back.yml'

env:
  SERVICE_NAME: api

defaults:
  run:
    working-directory: src/back

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: npm ci

      - name: Test
        run: npm test -- --watch=false

  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    if: contains('refs/head/production refs/heads/staging', github.ref)

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Variables
        id: variables
        shell: bash
        #: TODO: switch this to use github environments
        run: |
          REF=${{ github.ref }}
          BRANCH=${REF##*/}
          echo "current branch: $BRANCH"
          if [[ "$BRANCH" == "production" ]]; then
            SA_KEY="${{ secrets.SERVICE_ACCOUNT_KEY_PROD }}"
            PROJECT_ID="${{ secrets.PROJECT_ID_PROD }}"
          else
            SA_KEY="${{ secrets.SERVICE_ACCOUNT_KEY_STAGING }}"
            PROJECT_ID="${{ secrets.PROJECT_ID_STAGING }}"
          fi
          echo "::set-output name=sa_key::$SA_KEY"
          echo "::set-output name=project_id::$PROJECT_ID"
          echo "::set-output name=image::gcr.io/$PROJECT_ID/$SERVICE_NAME"

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: npm ci

      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ steps.variables.outputs.sa_key }}
          project_id: ${{ steps.variables.outputs.project_id }}

      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build Image
        run: |-
          docker build \
            -t "${{ steps.variables.outputs.image }}:$GITHUB_SHA" \
            -t "${{ steps.variables.outputs.image }}:latest" \
            .

      - name: Publish Image
        run: |-
          docker push "${{ steps.variables.outputs.image }}" -a

      - name: Deploy
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --platform "managed" \
            --region "us-central1" \
            --image "${{ steps.variables.outputs.image }}:latest"
