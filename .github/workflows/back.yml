name: Back - Test, Build, and Deploy to GCP

on:
  push:
    paths:
      - 'src/back/**'
      - '.github/workflows/back.yml'
      - '.github/actions/back/**'
      - 'src/common/**'
      - 'data/migrations/**'
      - 'data/knexfile.js'
      - 'data/package*.json'

env:
  SERVICE_NAME: api

defaults:
  run:
    working-directory: src/back

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: src/back/.node-version
      - run: |
          npm ci
          cd ../common && npm ci

      - name: Test
        run: |
          npm run lint
          npm run test:ci

  deploy-staging:
    name: Migrate DB, Build, and Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Staging
    if: github.ref == 'refs/heads/staging'
    env:
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      API: ${{ secrets.API }}
      DATABASE_ADMIN_PASSWORD: ${{ secrets.DATABASE_ADMIN_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      ENVIRONMENT: 'staging'
      IDENTITY_PROVIDER: ${{ secrets.IDENTITY_PROVIDER }}
      MIN_INSTANCES: 0
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      WEBSITE: ${{ secrets.WEBSITE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: DB Migrations
        uses: ./.github/actions/back/db-migrations
        with:
          environment: Staging
          project_id: ${{ secrets.PROJECT_ID }}
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: Deploy
        uses: ./.github/actions/back/deploy

  deploy-prod:
    name: Migration DB, Build, and Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Production
    if: github.ref == 'refs/heads/production'

    env:
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      API: ${{ secrets.API }}
      DATABASE_ADMIN_PASSWORD: ${{ secrets.DATABASE_ADMIN_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      ENVIRONMENT: production
      IDENTITY_PROVIDER: ${{ secrets.IDENTITY_PROVIDER }}
      MIN_INSTANCES: 1
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      WEBSITE: ${{ secrets.WEBSITE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: DB Migrations
        uses: ./.github/actions/back/db-migrations
        with:
          environment: Staging
          project_id: ${{ secrets.PROJECT_ID }}
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: Deploy
        uses: ./.github/actions/back/deploy

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Create domain mappings
        run: |-
          gcloud beta run domain-mappings create
            --service=${{ env.SERVICE_NAME }}
            --domain=roadkill.ugrc.utah.gov
