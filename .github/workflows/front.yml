name: Front - Test, Build, and Deploy

on:
  push:
    paths:
      - 'src/front/**'
      - '.github/workflows/front.yml'

defaults:
  run:
    working-directory: src/front

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Install npm dependencies
        run: npm ci

      - name: Test
        run: npm test -- --watch=false

  deploy-staging:
    name: Build and Deploy Tag to Staging
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Staging
      url: https://expo.io/@agrc/wildlife-vehicle-collision-reporter?release-channel=${{ env.EXPO_RELEASE_CHANNEL }}
    if: github.ref == 'refs/heads/staging'
    env:
      EXPO_RELEASE_CHANNEL: staging

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Install npm dependencies
        run: npm ci

      - name: Publish
        run: |
          export CLIENT_ID="${{ secrets.CLIENT_ID }}"
          export API="${{ secrets.API }}"
          echo "${{ secrets.GOOGLE_SERVICES_ANDROID }}" | base64 -d > ./google-services.json
          echo "${{ secrets.GOOGLE_SERVICES_IOS }}" | base64 -d > ./GoogleService-Info.json
          export GOOGLE_SERVICES_ANDROID=google-services.json
          export GOOGLE_SERVICES_IOS=GoogleService-Info.plist
          npx expo login -u "${{ secrets.EXPO_USERNAME }}" -p "${{ secrets.EXPO_PASSWORD }}"
          npx expo publish --release-channel "${{ env.EXPO_RELEASE_CHANNEL }}"

  deploy-production:
    name: Build and Deploy Tag to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Production
      url: https://expo.io/@agrc/wildlife-vehicle-collision-reporter?release-channel=${{ env.EXPO_RELEASE_CHANNEL }}
    if: github.ref == 'refs/heads/production'
    env:
      EXPO_RELEASE_CHANNEL: production-v3.0

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Install npm dependencies
        run: npm ci

      - name: Publish
        run: |
          export CLIENT_ID="${{ secrets.CLIENT_ID }}"
          export API="${{ secrets.API }}"
          echo "${{ secrets.GOOGLE_SERVICES_ANDROID }}" | base64 -d > ./google-services.json
          echo "${{ secrets.GOOGLE_SERVICES_IOS }}" | base64 -d > ./GoogleService-Info.json
          export GOOGLE_SERVICES_ANDROID=google-services.json
          export GOOGLE_SERVICES_IOS=GoogleService-Info.plist
          npx expo login -u "${{ secrets.EXPO_USERNAME }}" -p "${{ secrets.EXPO_PASSWORD }}"
          npx expo publish --release-channel "${{ env.EXPO_RELEASE_CHANNEL }}"
