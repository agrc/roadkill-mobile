name: Front - Test, Build, and Deploy

on:
  push:
    branches:
      - staging
      #: TODO: switch to main after release
      - rewrite
    paths:
      - 'src/front/**'
      - '.github/workflows/front.yml'

defaults:
  run:
    working-directory: src/front

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: npm ci

      - name: Test
        run: npm test -- --watch=false

  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: test
    #: TODO: switch to main after release
    if: contains('refs/head/rewrite refs/heads/staging', github.ref)

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # this could be removed once setup-node adds support for .nvmrc files
      # ref: https://github.com/actions/setup-node/issues/32
      - name: Get node version
        id: nvm
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
      - run: npm ci

      - name: Get Variables
        id: variables
        shell: bash
        #: TODO: switch to main after release
        run: |
          REF=${{ github.ref }}
          BRANCH=${REF##*/}
          echo "current branch: $BRANCH"
          if [[ "$BRANCH" == "rewrite" ]]; then
            RELEASE_CHANNEL="prod-v3.0"
          else
            RELEASE_CHANNEL="staging-v3.0"
          fi
          echo "::set-output name=release_channel::$RELEASE_CHANNEL"

      - name: Publish
        run: |
          npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD
          npx expo publish --release-channel "${{ steps.variables.outputs.release_channel }}"
