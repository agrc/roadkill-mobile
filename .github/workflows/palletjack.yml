name: Palletjack - Deploy to Cloud Run Job

on:
  push:
    paths:
      - 'src/palletjack/**'
      - '.github/workflows/palletjack.yml'
      - '.github/actions/palletjack/deploy/action.yml'

concurrency:
  group: '${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash
    working-directory: src/palletjack

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4

      - name: üì• Download extra dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libkrb5-dev

      - name: üèó Install module
        run: pip install .[tests]

      - name: üß™ Run tests
        run: pytest


  deploy-dev:
    name: Deploy Staging to GCF
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: dev

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4

      - name: üöÄ Deploy
        uses: ./.github/actions/palletjack/deploy
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          pause_schedule_job: 'yes'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          cloudsql_instance: ${{ secrets.CLOUDSQL_INSTANCE }}

  deploy-prod:
    name: Deploy Production to GCF
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: prod

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v4

      - name: üöÄ Deploy
        uses: ./.github/actions/palletjack/deploy
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account_email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          cloudsql_instance: ${{ secrets.CLOUDSQL_INSTANCE }}
