name: Build and Deploy Back
description: Build and deploy express app to Cloud Run.

runs:
  using: composite
  steps:
    - name: 🔨 Get Variables
      id: variables
      shell: bash
      run: echo "::set-output name=image::gcr.io/$PROJECT_ID/$SERVICE_NAME"

    - id: auth
      name: 🗝️ Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        create_credentials_file: true
        token_format: access_token
        workload_identity_provider: ${{ env.IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

    - name: 🐳 Set up Docker Buildx
      id: builder
      uses: docker/setup-buildx-action@v1

    - name: 🐳 Setup docker
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: ✂️ Set short commit hash
      shell: bash
      run: |
        echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

    - name: 📦 Build and push image
      uses: docker/build-push-action@v2
      with:
        file: ./src/back/Dockerfile
        builder: ${{ steps.builder.outputs.name }}
        tags: ${{ steps.variables.outputs.image }}:${{ env.SHORT_SHA }},${{ steps.variables.outputs.image }}:latest
        context: ./src
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 🚀 Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE_NAME }}
        image: ${{ steps.variables.outputs.image }}:latest
        region: us-central1
        flags: |
          --service-account=cloud-run-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          --max-instances=10
          --min-instances=${{ env.MIN_INSTANCES }}
          --set-cloudsql-instances=${{ env.CLOUDSQL_INSTANCE }}
          --allow-unauthenticated
        env_vars: >
          ADMIN_EMAIL=${{ env.ADMIN_EMAIL }},
          API=${{ env.API }},
          DATABASE_HOST=${{ env.DATABASE_HOST }},
          ENVIRONMENT=${{ env.ENVIRONMENT }},
          PROJECT_ID=${{ env.PROJECT_ID }},
          WEBSITE=${{ env.WEBSITE }}
        secrets: >
          /secrets/client_id/value=client-id:latest,
          /secrets/database_password/value=database-password:latest,
          /secrets/sendgrid_api_key/value=sendgrid-api-key:latest
